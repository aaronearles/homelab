name: 'Proxmox LXC Terraform Workflow'
 
on:
  # push:
  #   branches:
  #   - main
  # pull_request:
    push:
      paths:
        - 'proxmox/terraform/proxmox_lxc_draft/basic/**'
      branches: [ "main" ]
    pull_request:
      paths:
        - 'proxmox/terraform/proxmox_lxc_draft/basic/**'
      branches: [ "main" ]
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
 
jobs:
  terraform:
    name: 'Terraform'
    env:
      PM_API_URL: ${{ vars.PM_API_URL }}
      PM_API_TOKEN_ID: ${{ secrets.PM_API_TOKEN_ID }}
      PM_API_TOKEN_SECRET: ${{ secrets.PM_API_TOKEN_SECRET }}
      lxc_password: ${{ secrets.DEFAULT_PASSWORD }}
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    # environment: lab
 
    defaults:
      run:
        working-directory: ${{ vars.tf_actions_working_dir }}
    permissions:
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v3
    
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    
    - name: Terraform Init
      id: init
      run: terraform init
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true
    
    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>
    
          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`
    
          </details>
    
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
    
          <details><summary>Show Plan</summary>
    
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
    
          </details>
    
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ vars.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
    
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })